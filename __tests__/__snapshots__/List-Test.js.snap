// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
Array [
  <ListRef
    DEPRECATED_sendUpdatedChildFrames={false}
    alwaysBounceHorizontal={true}
    alwaysBounceVertical={false}
    data={Array []}
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    getItemLayout={[Function]}
    horizontal={true}
    initialNumToRender={2}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    name="List"
    numColumns={1}
    onContentSizeChange={null}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminationRequest={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    onScrollShouldSetResponder={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    onTimelinesLoaded={[Function]}
    onTouchCancel={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    renderItem={[Function]}
    renderScrollComponent={[Function]}
    scrollBarThumbImage={null}
    scrollEnabled={true}
    scrollEventThrottle={50}
    sendMomentumEvents={true}
    stickyHeaderIndices={Array []}
    style={
      Array [
        Object {
          "flexDirection": "row",
          "flexGrow": 1,
          "flexShrink": 1,
          "overflow": "scroll",
        },
        undefined,
      ]
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <ScrollContentData
      collapsable={false}
      onLayout={[Function]}
      style={
        Array [
          Object {
            "flexDirection": "row",
          },
          undefined,
        ]
      }
    />
  </ListRef>,
  <ViewRef
    name="List"
    onLoad={[Function]}
    onTimelinesLoaded={[Function]}
  />,
]
`;
